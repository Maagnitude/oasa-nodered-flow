[
    {
        "id": "0c8445c1741cb21a",
        "type": "tab",
        "label": "HORIZONTAL",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "43bbba2ec5d3c519",
        "type": "http request",
        "z": "0c8445c1741cb21a",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Authorization",
                "keyValue": "",
                "valueType": "other",
                "valueValue": "Token 877396539fb01c71b5e67b591aab469f28adf5ab"
            }
        ],
        "x": 790,
        "y": 460,
        "wires": [
            [
                "39a9a5c11602dff2"
            ]
        ]
    },
    {
        "id": "4c5dbdb26982bfb5",
        "type": "inject",
        "z": "0c8445c1741cb21a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 460,
        "wires": [
            [
                "d99aa4cb2d1ef695"
            ]
        ]
    },
    {
        "id": "a465da0ab0796425",
        "type": "comment",
        "z": "0c8445c1741cb21a",
        "name": "Getting only last day info",
        "info": "",
        "x": 270,
        "y": 420,
        "wires": []
    },
    {
        "id": "e6e6d4d32c6f7247",
        "type": "debug",
        "z": "0c8445c1741cb21a",
        "name": "json debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 400,
        "wires": []
    },
    {
        "id": "93c6e74253d0473b",
        "type": "function",
        "z": "0c8445c1741cb21a",
        "name": "Filter Data",
        "func": "var oasa_info = new Array();\nvar station_list = [\"ΟΜOΝΟΙΑ\", \"ΣΥΝTΑΓΜΑ\", \"ΜΟΝΑΣTΗΡΑKΙ\", \"ΣTΑΘΜOΣ ΛΑΡΙΣΗΣ\", \"ΑTTΙKΗ\", \"ΠΕΙΡΑΙΑΣ\", \"ΑΕΡΟΔΡΟΜΙΟ\"];\nvar data = msg.payload;\n\nfor (var i = 0; i < data.length; i++) {\n    if (station_list.includes(data[i].dv_platenum_station)) {\n        var validations = data[i].dv_validations;\n        var station = data[i].dv_platenum_station;\n        var date_hour = data[i].date_hour;\n        msg.payload = {};\n        msg.payload.validations = validations;\n        msg.payload.station = station;\n        msg.payload.date_hour = date_hour;\n        node.send([msg, null]) //send new msg to output\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 460,
        "wires": [
            [
                "89b33cb039f6e4a1",
                "7c8ec1b455f51fe2"
            ]
        ]
    },
    {
        "id": "39a9a5c11602dff2",
        "type": "json",
        "z": "0c8445c1741cb21a",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 950,
        "y": 460,
        "wires": [
            [
                "e6e6d4d32c6f7247",
                "93c6e74253d0473b"
            ]
        ]
    },
    {
        "id": "89b33cb039f6e4a1",
        "type": "debug",
        "z": "0c8445c1741cb21a",
        "name": "station info debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.station",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 400,
        "wires": []
    },
    {
        "id": "ec1ef7b0dd522602",
        "type": "file",
        "z": "0c8445c1741cb21a",
        "name": "Station Info CSV",
        "filename": "C:\\Users\\yiwrg\\Desktop\\Projects\\Node-Red\\oasa.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1450,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "b596b3ea979e52fc",
        "type": "comment",
        "z": "0c8445c1741cb21a",
        "name": "Write csv to a file",
        "info": "",
        "x": 1440,
        "y": 420,
        "wires": []
    },
    {
        "id": "ad434776e8182f64",
        "type": "function",
        "z": "0c8445c1741cb21a",
        "name": "INSERT INTO oasa (with ID)",
        "func": "var values = msg.payload.split(',');\nvar date_hour = values[0];\nvar station = values[1];\nvar validations = values[2];\n\nmsg.topic = 'INSERT INTO oasa (date_hour, station, validations) VALUES (\"' + date_hour + '\", \"' + station + '\", ' + validations + ')';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 520,
        "wires": [
            [
                "e469526e9d5ef555"
            ]
        ]
    },
    {
        "id": "e469526e9d5ef555",
        "type": "link out",
        "z": "0c8445c1741cb21a",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "059542e6a2db4594",
            "f646e904b923107e"
        ],
        "x": 1645,
        "y": 520,
        "wires": []
    },
    {
        "id": "d99aa4cb2d1ef695",
        "type": "function",
        "z": "0c8445c1741cb21a",
        "name": "Date Formatting",
        "func": "var timestamp = msg.payload;  // Given timestamp in milliseconds\n\n// Convert milliseconds to seconds\nvar seconds = Math.floor(timestamp / 1000);\n\n// Create a new Date object from the seconds\nvar date = new Date(seconds * 1000);\n\n// Extract the date in the desired format\nmsg.today = date.toISOString().split('T')[0];\n\ndate.setDate(date.getDate() - 1);\n\nmsg.yesterday = date.toISOString().split('T')[0];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 460,
        "wires": [
            [
                "5e07a4a5e9162fe3"
            ]
        ]
    },
    {
        "id": "5e07a4a5e9162fe3",
        "type": "function",
        "z": "0c8445c1741cb21a",
        "name": "URL Building",
        "func": "var dateFrom = msg.yesterday;  // Get the previous date from the previous flow\nvar dateTo = msg.today;  // Get the current date from the previous flow\n\n// Construct the URL with the date parameters\nvar url = \"https://data.gov.gr/api/v1/query/oasa_ridership?date_from=\" + dateFrom + \"&date_to=\" + dateTo;\n\nmsg.url = url;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 460,
        "wires": [
            [
                "43bbba2ec5d3c519"
            ]
        ]
    },
    {
        "id": "7c8ec1b455f51fe2",
        "type": "csv",
        "z": "0c8445c1741cb21a",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "date_hour, station, validations",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1270,
        "y": 460,
        "wires": [
            [
                "ec1ef7b0dd522602",
                "ad434776e8182f64"
            ]
        ]
    },
    {
        "id": "34dcc11dcba077a5",
        "type": "inject",
        "z": "0c8445c1741cb21a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 360,
        "wires": [
            [
                "99ecf34e851d261a"
            ]
        ]
    },
    {
        "id": "e5152d9e86932d4d",
        "type": "function",
        "z": "0c8445c1741cb21a",
        "name": "URL Building",
        "func": "var dateFrom = msg.yesterday;  // Get the previous date from the previous flow\nvar dateTo = msg.today;  // Get the current date from the previous flow\n\n// Construct the URL with the date parameters\nvar url = \"https://data.gov.gr/api/v1/query/oasa_ridership?date_from=\" + dateFrom + \"&date_to=\" + dateTo;\n\nmsg.url = url;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 360,
        "wires": [
            [
                "43bbba2ec5d3c519"
            ]
        ]
    },
    {
        "id": "99ecf34e851d261a",
        "type": "function",
        "z": "0c8445c1741cb21a",
        "name": "Date Formatting",
        "func": "var timestamp = msg.payload;  // Given timestamp in milliseconds\n\n// Convert milliseconds to seconds\nvar seconds = Math.floor(timestamp / 1000);\n\n// Create a new Date object from the seconds\nvar date = new Date(seconds * 1000);\n\n// Extract the date in the desired format\nmsg.today = date.toISOString().split('T')[0];\n\ndate.setDate(date.getDate() - 6);\n\nmsg.yesterday = date.toISOString().split('T')[0];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 360,
        "wires": [
            [
                "e5152d9e86932d4d"
            ]
        ]
    },
    {
        "id": "8d195c636cd20c95",
        "type": "comment",
        "z": "0c8445c1741cb21a",
        "name": "Getting the last 7 days info",
        "info": "",
        "x": 270,
        "y": 320,
        "wires": []
    },
    {
        "id": "b8a89f9e37253535",
        "type": "tab",
        "label": "DB",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b9e5b2b7c2a23c51",
        "type": "sqlite",
        "z": "b8a89f9e37253535",
        "mydb": "f0773fa283cae9e6",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Station Info DB",
        "x": 780,
        "y": 420,
        "wires": [
            [
                "b9160a6ca45e5f87",
                "ecfef91938c4afc6"
            ]
        ]
    },
    {
        "id": "fdeb613b3d063691",
        "type": "inject",
        "z": "b8a89f9e37253535",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 420,
        "wires": [
            [
                "d8fed081ebf6f1da"
            ]
        ]
    },
    {
        "id": "d8fed081ebf6f1da",
        "type": "function",
        "z": "b8a89f9e37253535",
        "name": "SELECT *",
        "func": "msg.topic = 'SELECT * FROM oasa';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 420,
        "wires": [
            [
                "b9e5b2b7c2a23c51"
            ]
        ]
    },
    {
        "id": "b9160a6ca45e5f87",
        "type": "debug",
        "z": "b8a89f9e37253535",
        "name": "Select debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 360,
        "wires": []
    },
    {
        "id": "db2ef759610bad3a",
        "type": "comment",
        "z": "b8a89f9e37253535",
        "name": "TABLE SELECTS",
        "info": "",
        "x": 270,
        "y": 380,
        "wires": []
    },
    {
        "id": "0415a51799fe1eef",
        "type": "debug",
        "z": "b8a89f9e37253535",
        "name": "Station info debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "stationinfo",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 360,
        "wires": []
    },
    {
        "id": "13c2b772e6f37a4a",
        "type": "function",
        "z": "b8a89f9e37253535",
        "name": "Data to Chart",
        "func": "if (msg.payload.length == 0) {\n    msg.payload = [\"ΟΜOΝΟΙΑ\", \"ΣΥΝTΑΓΜΑ\", \"ΜΟΝΑΣTΗΡΑKΙ\", \"ΣTΑΘΜOΣ ΛΑΡΙΣΗΣ\", \"ΑTTΙKΗ\", \"ΠΕΙΡΑΙΑΣ\", \"ΑΕΡΟΔΡΟΜΙΟ\"];\n}\n\nvar stationinfo = msg.stationinfo;\n\nvar series = new Array;\nfor (var i = 0; i < msg.payload.length; i++) {\n    series.push(msg.payload[i]);\n}\n\nvar data = new Array();\nfor (var i = 0; i < series.length; i++) {\n    data.push(new Array(40).fill(0));\n}\nfor (var i = 0; i < series.length; i++) {\n    if (series[i] in stationinfo) {\n        for (var j = 0; j < 40; j++) {\n            data[i][j] = ({ \"x\": new Date(stationinfo[series[i]][j].date_hour).getTime(), \"y\": stationinfo[series[i]][j].validations});\n        }\n    }\n}\n\nmsg.payload = [{\n    \"series\": series,\n    \"data\": data,\n    \"labels\": [\"label1\", \"label2\", \"label3\"]\n}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 520,
        "wires": [
            [
                "dd90d2c6e2b01f67",
                "0f109ff516f1e94c"
            ]
        ]
    },
    {
        "id": "c34ea55253a0821e",
        "type": "debug",
        "z": "b8a89f9e37253535",
        "name": "Dropdown check",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 360,
        "wires": []
    },
    {
        "id": "cb227b60fe0de986",
        "type": "ui_dropdown",
        "z": "b8a89f9e37253535",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "27d19b163c82ed02",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": true,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1180,
        "y": 420,
        "wires": [
            [
                "c34ea55253a0821e",
                "2a766076a9d2830a"
            ]
        ]
    },
    {
        "id": "dd90d2c6e2b01f67",
        "type": "ui_chart",
        "z": "b8a89f9e37253535",
        "name": "",
        "group": "27d19b163c82ed02",
        "order": 3,
        "width": "0",
        "height": "0",
        "label": "Station Validations/Hour Chart",
        "chartType": "line",
        "legend": "true",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#1dfa00",
            "#ff7f0e",
            "#207e20",
            "#fb09db",
            "#f01414",
            "#ffb4b3",
            "#9467bd",
            "#d9fa00"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1170,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "0f109ff516f1e94c",
        "type": "debug",
        "z": "b8a89f9e37253535",
        "name": "Chart data debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 580,
        "wires": []
    },
    {
        "id": "ecfef91938c4afc6",
        "type": "function",
        "z": "b8a89f9e37253535",
        "name": "Create Station List",
        "func": "var stations = new Array();\nvar validations = new Array();\nvar date_hour = new Array();\nvar stationinfo = {\"ΟΜOΝΟΙΑ\":[], \"ΣΥΝTΑΓΜΑ\":[], \"ΜΟΝΑΣTΗΡΑKΙ\":[], \"ΣTΑΘΜOΣ ΛΑΡΙΣΗΣ\":[], \"ΑTTΙKΗ\":[], \"ΠΕΙΡΑΙΑΣ\":[], \"ΑΕΡΟΔΡΟΜΙΟ\":[]};\n\nfor (var i = 0; i < msg.payload.length; i++) {\n    switch (msg.payload[i].station) {\n        case (\"ΟΜOΝΟΙΑ\"):\n            stationinfo[\"ΟΜOΝΟΙΑ\"].push({ \"date_hour\": msg.payload[i].date_hour, \"validations\": msg.payload[i].validations });\n            break;\n        case (\"ΣΥΝTΑΓΜΑ\"):\n            stationinfo[\"ΣΥΝTΑΓΜΑ\"].push({ \"date_hour\": msg.payload[i].date_hour, \"validations\": msg.payload[i].validations });\n            break;\n        case (\"ΜΟΝΑΣTΗΡΑKΙ\"):\n            stationinfo[\"ΜΟΝΑΣTΗΡΑKΙ\"].push({ \"date_hour\": msg.payload[i].date_hour, \"validations\": msg.payload[i].validations });\n            break;\n        case (\"ΣTΑΘΜOΣ ΛΑΡΙΣΗΣ\"):\n            stationinfo[\"ΣTΑΘΜOΣ ΛΑΡΙΣΗΣ\"].push({ \"date_hour\": msg.payload[i].date_hour, \"validations\": msg.payload[i].validations });\n            break;\n        case (\"ΑTTΙKΗ\"):\n            stationinfo[\"ΑTTΙKΗ\"].push({ \"date_hour\": msg.payload[i].date_hour, \"validations\": msg.payload[i].validations });\n            break;\n        case (\"ΠΕΙΡΑΙΑΣ\"):\n            stationinfo[\"ΠΕΙΡΑΙΑΣ\"].push({ \"date_hour\": msg.payload[i].date_hour, \"validations\": msg.payload[i].validations });\n            break;\n        case (\"ΑΕΡΟΔΡΟΜΙΟ\"):\n            stationinfo[\"ΑΕΡΟΔΡΟΜΙΟ\"].push({ \"date_hour\": msg.payload[i].date_hour, \"validations\": msg.payload[i].validations });\n            break;\n        default:\n            break;\n    }\n    stations.push(msg.payload[i].station);\n    validations.push(msg.payload[i].validations);\n    date_hour.push(msg.payload[i].date_hour);\n}\nmsg.options = [\"ΟΜOΝΟΙΑ\", \"ΣΥΝTΑΓΜΑ\", \"ΜΟΝΑΣTΗΡΑKΙ\", \"ΣTΑΘΜOΣ ΛΑΡΙΣΗΣ\", \"ΑTTΙKΗ\", \"ΠΕΙΡΑΙΑΣ\", \"ΑΕΡΟΔΡΟΜΙΟ\"];\nmsg.stations = stations;\nmsg.validations = validations;\nmsg.date_hour = date_hour;\nmsg.stationinfo = stationinfo;\n\nglobal.set('stationinfo', msg.stationinfo);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 420,
        "wires": [
            [
                "0415a51799fe1eef",
                "cb227b60fe0de986"
            ]
        ]
    },
    {
        "id": "2a766076a9d2830a",
        "type": "function",
        "z": "b8a89f9e37253535",
        "name": "sorting dates",
        "func": "// var timestamps = new Array();\nvar stationinfo = global.get('stationinfo');\n\nconst keys = Object.keys(stationinfo);\nfor (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    stationinfo[key].sort((a, b) => a.date_hour.localeCompare(b.date_hour));\n}\nmsg.stationinfo = stationinfo;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 420,
        "wires": [
            [
                "8729c485f6464bd1",
                "13c2b772e6f37a4a"
            ]
        ]
    },
    {
        "id": "8729c485f6464bd1",
        "type": "debug",
        "z": "b8a89f9e37253535",
        "name": "Date sort debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "stationinfo",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1460,
        "y": 360,
        "wires": []
    },
    {
        "id": "64052db560333d66",
        "type": "ui_button",
        "z": "b8a89f9e37253535",
        "name": "Clear Chart",
        "group": "27d19b163c82ed02",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Clear Chart",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 670,
        "y": 640,
        "wires": [
            [
                "60a84c58d2a998cb"
            ]
        ]
    },
    {
        "id": "60a84c58d2a998cb",
        "type": "function",
        "z": "b8a89f9e37253535",
        "name": "empty payload",
        "func": "msg.payload = [];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 640,
        "wires": [
            [
                "dd90d2c6e2b01f67"
            ]
        ]
    },
    {
        "id": "0f56f1fcb4a19c92",
        "type": "sqlite",
        "z": "b8a89f9e37253535",
        "mydb": "f0773fa283cae9e6",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Station Info DB",
        "x": 780,
        "y": 720,
        "wires": [
            [
                "7af95713be62e6ad"
            ]
        ]
    },
    {
        "id": "15f7cb9dc0e0d172",
        "type": "function",
        "z": "b8a89f9e37253535",
        "name": "DROP TABLE oasa",
        "func": "msg.topic = 'DROP TABLE oasa';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 700,
        "wires": [
            [
                "0f56f1fcb4a19c92"
            ]
        ]
    },
    {
        "id": "f66f21aaef8783c7",
        "type": "inject",
        "z": "b8a89f9e37253535",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 720,
        "wires": [
            [
                "15f7cb9dc0e0d172",
                "490a6eace03387f2"
            ]
        ]
    },
    {
        "id": "7af95713be62e6ad",
        "type": "debug",
        "z": "b8a89f9e37253535",
        "name": "Drop debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 720,
        "wires": []
    },
    {
        "id": "ecb00efef2eff3d0",
        "type": "inject",
        "z": "b8a89f9e37253535",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 280,
        "wires": [
            [
                "cfc63f77e68e8f7c"
            ]
        ]
    },
    {
        "id": "cfc63f77e68e8f7c",
        "type": "function",
        "z": "b8a89f9e37253535",
        "name": "CREATE TABLE oasa",
        "func": "msg.topic = 'CREATE TABLE oasa (oasaid INTEGER PRIMARY KEY AUTOINCREMENT, date_hour TEXT, station TEXT, validations TEXT)';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 280,
        "wires": [
            [
                "eb1a801f3ac01c31"
            ]
        ]
    },
    {
        "id": "eb1a801f3ac01c31",
        "type": "sqlite",
        "z": "b8a89f9e37253535",
        "mydb": "f0773fa283cae9e6",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Station Info DB",
        "x": 780,
        "y": 280,
        "wires": [
            [
                "9886c041ec2b19ff"
            ]
        ]
    },
    {
        "id": "059542e6a2db4594",
        "type": "link in",
        "z": "b8a89f9e37253535",
        "name": "link in 2",
        "links": [
            "e469526e9d5ef555"
        ],
        "x": 605,
        "y": 220,
        "wires": [
            [
                "eb1a801f3ac01c31"
            ]
        ]
    },
    {
        "id": "9886c041ec2b19ff",
        "type": "debug",
        "z": "b8a89f9e37253535",
        "name": "Create table debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 220,
        "wires": []
    },
    {
        "id": "d0308e4b4c581bc8",
        "type": "comment",
        "z": "b8a89f9e37253535",
        "name": "TABLE oasa CREATION",
        "info": "",
        "x": 290,
        "y": 240,
        "wires": []
    },
    {
        "id": "025d8f029e9ee695",
        "type": "comment",
        "z": "b8a89f9e37253535",
        "name": "TABLES DROP",
        "info": "",
        "x": 260,
        "y": 680,
        "wires": []
    },
    {
        "id": "09f15ee5099be1f4",
        "type": "comment",
        "z": "b8a89f9e37253535",
        "name": "TABLE INSERTS",
        "info": "",
        "x": 540,
        "y": 180,
        "wires": []
    },
    {
        "id": "ca411b7ea730fc89",
        "type": "inject",
        "z": "b8a89f9e37253535",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 900,
        "wires": [
            [
                "b0a352c6bbe5a4fa"
            ]
        ]
    },
    {
        "id": "b0a352c6bbe5a4fa",
        "type": "function",
        "z": "b8a89f9e37253535",
        "name": "CREATE TABLE clusters",
        "func": "msg.topic = 'CREATE TABLE clusters (clusterid INTEGER PRIMARY KEY AUTOINCREMENT, date_hour TEXT, station TEXT, highcluster TEXT, lowcluster TEXT)';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 900,
        "wires": [
            [
                "58834e46e98031d8"
            ]
        ]
    },
    {
        "id": "58834e46e98031d8",
        "type": "sqlite",
        "z": "b8a89f9e37253535",
        "mydb": "f0773fa283cae9e6",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Station Info DB",
        "x": 780,
        "y": 900,
        "wires": [
            [
                "08c7407aa15c372d"
            ]
        ]
    },
    {
        "id": "08c7407aa15c372d",
        "type": "debug",
        "z": "b8a89f9e37253535",
        "name": "Create table debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 840,
        "wires": []
    },
    {
        "id": "629be5edcea36c43",
        "type": "comment",
        "z": "b8a89f9e37253535",
        "name": "TABLE clusters CREATION",
        "info": "",
        "x": 300,
        "y": 860,
        "wires": []
    },
    {
        "id": "490a6eace03387f2",
        "type": "function",
        "z": "b8a89f9e37253535",
        "name": "DROP TABLE clusters",
        "func": "msg.topic = 'DROP TABLE clusters';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 760,
        "wires": [
            [
                "0f56f1fcb4a19c92"
            ]
        ]
    },
    {
        "id": "4fba03813be11b9b",
        "type": "function",
        "z": "b8a89f9e37253535",
        "name": "INSERT INTO clusters (with ID)",
        "func": "msg.payload = global.get('foundValsClusters');\nmsg.stationinfo = global.get('stationinfo');\n\nvar values = msg.payload.split(',');\nvar date_hour = values[0];\nvar station = values[1];\nvar validations = values[2];\n\nmsg.topic = 'INSERT INTO clusters (date_hour, station, highcluster, lowcluster) VALUES (\"' + date_hour + '\", \"' + station + '\", ' + validations + ')';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "7365334250a60e44",
        "type": "inject",
        "z": "b8a89f9e37253535",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 980,
        "wires": [
            [
                "4fba03813be11b9b"
            ]
        ]
    },
    {
        "id": "26c95fb938d96ab0",
        "type": "comment",
        "z": "b8a89f9e37253535",
        "name": "TABLE INSERTS (TODO)",
        "info": "",
        "x": 290,
        "y": 1020,
        "wires": []
    },
    {
        "id": "e03fe4dd530787b7",
        "type": "tab",
        "label": "Clustering",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3355e126555ae458",
        "type": "function",
        "z": "e03fe4dd530787b7",
        "name": "kmeans-Monast",
        "func": "var clusterMaker = context.global.clusters;\n\n//number of clusters, defaults to undefined\nclusterMaker.k(2);\n\n//number of iterations (higher number gives more time to converge), defaults to 1000\nclusterMaker.iterations(750);\n\nvar validations = global.get('globalvalidations');\nvar stations = global.get('globalstations');\nvar date_hour = global.get('globaldates');\nvar clusterStation = \"ΜΟΝΑΣTΗΡΑKΙ\";\nvar clusterVals = new Array();\nvar clusterDateHour = new Array();\n\nfor (var i = 0; i < stations.length; i++) {\n    if (stations[i].includes(clusterStation)) {\n        clusterVals.push(validations[i]);\n        clusterDateHour.push(date_hour[i]);\n    }\n}\n\n//data from which to identify clusters, defaults to []\nclusterMaker.data(clusterVals);\n\nmsg.payload = clusterMaker.clusters()\n\nmsg.payload.sort(function(a, b) { return parseFloat(a.centroid) - parseFloat(b.centroid); });\n\nglobal.set(\"foundValsClusters\", msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 120,
        "wires": [
            [
                "7fcc4f2920393b5e"
            ]
        ]
    },
    {
        "id": "85a11227b28d8c9f",
        "type": "inject",
        "z": "e03fe4dd530787b7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 700,
        "y": 640,
        "wires": [
            [
                "b6289d7ed31c5e9f"
            ]
        ]
    },
    {
        "id": "b6289d7ed31c5e9f",
        "type": "file in",
        "z": "e03fe4dd530787b7",
        "name": "Station Info CSV",
        "filename": "C:\\Users\\yiwrg\\Desktop\\Projects\\Node-Red\\oasa.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 690,
        "y": 580,
        "wires": [
            [
                "0168c355d0bf9126"
            ]
        ]
    },
    {
        "id": "0168c355d0bf9126",
        "type": "csv",
        "z": "e03fe4dd530787b7",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 690,
        "y": 520,
        "wires": [
            [
                "0d6b0c906c2909d2"
            ]
        ]
    },
    {
        "id": "0d6b0c906c2909d2",
        "type": "split",
        "z": "e03fe4dd530787b7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 690,
        "y": 460,
        "wires": [
            [
                "9813fe93f115815c",
                "2c3176fc30202431",
                "90b89b61f1bd81f3"
            ]
        ]
    },
    {
        "id": "90b89b61f1bd81f3",
        "type": "function",
        "z": "e03fe4dd530787b7",
        "name": "filterValidations",
        "func": "var validations = new Array();\n\nvalidations[0] = msg.payload.col3;\n\nmsg.payload = {};\nmsg.payload = validations;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 400,
        "wires": [
            [
                "a1fa419f233d9686"
            ]
        ]
    },
    {
        "id": "a1fa419f233d9686",
        "type": "join",
        "z": "e03fe4dd530787b7",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1090,
        "y": 340,
        "wires": [
            [
                "0a7861e11cebd657",
                "fd8835ab8203c4d7"
            ]
        ]
    },
    {
        "id": "0a7861e11cebd657",
        "type": "debug",
        "z": "e03fe4dd530787b7",
        "name": "debug 37",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 340,
        "wires": []
    },
    {
        "id": "7fcc4f2920393b5e",
        "type": "debug",
        "z": "e03fe4dd530787b7",
        "name": "debug 38",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 120,
        "wires": []
    },
    {
        "id": "d050e7817e6d6cb2",
        "type": "function",
        "z": "e03fe4dd530787b7",
        "name": "kmeans-Aero",
        "func": "var clusterMaker = context.global.clusters;\n\n//number of clusters, defaults to undefined\nclusterMaker.k(2);\n\n//number of iterations (higher number gives more time to converge), defaults to 1000\nclusterMaker.iterations(750);\n\nvar validations = global.get('globalvalidations');\nvar stations = global.get('globalstations');\nvar date_hour = global.get('globaldates');\nvar clusterStation = \"ΑΕΡΟΔΡΟΜΙΟ\";\nvar clusterVals = new Array();\nvar clusterDateHour = new Array();\n\nfor (var i = 0; i < stations.length; i++) {\n    if (stations[i].includes(clusterStation)) {\n        clusterVals.push(validations[i]);\n        clusterDateHour.push(date_hour[i]);\n    }\n}\n\n//data from which to identify clusters, defaults to []\nclusterMaker.data(clusterVals);\n\nmsg.payload = clusterMaker.clusters()\n\nmsg.payload.sort(function (a, b) { return parseFloat(a.centroid) - parseFloat(b.centroid); });\n\nglobal.set(\"foundValsClusters\", msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 120,
        "wires": [
            [
                "0f122bb3732fabfc"
            ]
        ]
    },
    {
        "id": "2c3176fc30202431",
        "type": "function",
        "z": "e03fe4dd530787b7",
        "name": "filterStations",
        "func": "var stations = new Array();\n\nstations[0] = msg.payload.col2;\n\nmsg.payload = {};\nmsg.payload = stations;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 400,
        "wires": [
            [
                "977eed4994f6f8bc"
            ]
        ]
    },
    {
        "id": "977eed4994f6f8bc",
        "type": "join",
        "z": "e03fe4dd530787b7",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 690,
        "y": 340,
        "wires": [
            [
                "79c3810df0146d3b",
                "1acff2ed5259d571"
            ]
        ]
    },
    {
        "id": "79c3810df0146d3b",
        "type": "debug",
        "z": "e03fe4dd530787b7",
        "name": "debug 42",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 340,
        "wires": []
    },
    {
        "id": "9813fe93f115815c",
        "type": "function",
        "z": "e03fe4dd530787b7",
        "name": "filterDates",
        "func": "var date_hours = new Array();\n\ndate_hours[0] = msg.payload.col1;\n\nmsg.payload = {};\nmsg.payload = date_hours;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 400,
        "wires": [
            [
                "a55ea5669d32882a"
            ]
        ]
    },
    {
        "id": "a55ea5669d32882a",
        "type": "join",
        "z": "e03fe4dd530787b7",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 310,
        "y": 340,
        "wires": [
            [
                "548cee2171691f14",
                "069e48682a4c9c7a"
            ]
        ]
    },
    {
        "id": "548cee2171691f14",
        "type": "debug",
        "z": "e03fe4dd530787b7",
        "name": "debug 43",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 340,
        "wires": []
    },
    {
        "id": "069e48682a4c9c7a",
        "type": "function",
        "z": "e03fe4dd530787b7",
        "name": "function 19",
        "func": "global.set('globaldates', msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "1acff2ed5259d571",
        "type": "function",
        "z": "e03fe4dd530787b7",
        "name": "function 20",
        "func": "global.set('globalstations', msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "fd8835ab8203c4d7",
        "type": "function",
        "z": "e03fe4dd530787b7",
        "name": "function 21",
        "func": "global.set('globalvalidations', msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 280,
        "wires": [
            [
                "3355e126555ae458",
                "d050e7817e6d6cb2"
            ]
        ]
    },
    {
        "id": "0f122bb3732fabfc",
        "type": "debug",
        "z": "e03fe4dd530787b7",
        "name": "debug 44",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 80,
        "wires": []
    },
    {
        "id": "6f7bc8a5477bbdec",
        "type": "comment",
        "z": "e03fe4dd530787b7",
        "name": "KMEANS CLUSTERING (TODO)",
        "info": "",
        "x": 610,
        "y": 220,
        "wires": []
    },
    {
        "id": "f0773fa283cae9e6",
        "type": "sqlitedb",
        "db": "C:\\Users\\yiwrg\\Desktop\\Projects\\Node-Red\\stationdb.sqlite",
        "mode": "RWC"
    },
    {
        "id": "27d19b163c82ed02",
        "type": "ui_group",
        "name": "Results",
        "tab": "50e024952add520c",
        "order": 1,
        "disp": true,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "50e024952add520c",
        "type": "ui_tab",
        "name": "Tab 1",
        "icon": "dashboard",
        "order": 1
    }
]